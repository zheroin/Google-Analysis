{"version":3,"sources":["date-range-selector.js"],"names":["gapi","analytics","ready","convertDate","str","dateFormat","test","match","nDaysAgo","exec","daysAgo","Error","numDays","date","Date","setDate","getDate","month","String","getMonth","length","day","getFullYear","createComponent","execute","options","this","get","container","document","getElementById","template","innerHTML","dateInputs","querySelectorAll","startDateInput","value","endDateInput","setValues","setMinMax","onchange","onChange","bind","emit","start-date","end-date","max","min"],"mappings":"AAoBAA,KAAKC,UAAUC,MAAM,WAWnB,QAASC,GAAYC,GAEnB,GAAIC,EAAWC,KAAKF,GAAM,MAAOA,EAEjC,IAAIG,GAAQC,EAASC,KAAKL,EAC1B,IAAIG,EACF,MAAOG,IAASH,EAAM,GACjB,IAAW,SAAPH,EACT,MAAOM,GAAQ,EACV,IAAW,aAAPN,EACT,MAAOM,GAAQ,EAEf,MAAM,IAAIC,OAAM,uBAAyBP,GAS7C,QAASM,GAAQE,GACf,GAAIC,GAAO,GAAIC,KACfD,GAAKE,QAAQF,EAAKG,UAAYJ,EAC9B,IAAIK,GAAQC,OAAOL,EAAKM,WAAa,EACrCF,GAAwB,GAAhBA,EAAMG,OAAc,IAAMH,EAAOA,CACzC,IAAII,GAAMH,OAAOL,EAAKG,UAEtB,OADAK,GAAoB,GAAdA,EAAID,OAAc,IAAMC,EAAKA,EAC5BR,EAAKS,cAAgB,IAAML,EAAQ,IAAMI,EArClD,GAAIb,GAAW,eACXH,EAAa,qBAuCjBL,MAAKC,UAAUsB,gBAAgB,qBAM7BC,QAAS,WACP,GAAIC,GAAUC,KAAKC,KACnBF,GAAQ,cAAgBA,EAAQ,eAAiB,WACjDA,EAAQ,YAAcA,EAAQ,aAAe,YAG7CC,KAAKE,UAAwC,gBAArBH,GAAQG,UAC9BC,SAASC,eAAeL,EAAQG,WAAaH,EAAQG,UAGnDH,EAAQM,WAAUL,KAAKK,SAAWN,EAAQM,UAE9CL,KAAKE,UAAUI,UAAYN,KAAKK,QAChC,IAAIE,GAAaP,KAAKE,UAAUM,iBAAiB,QAWjD,OATAR,MAAKS,eAAiBF,EAAW,GACjCP,KAAKS,eAAeC,MAAQjC,EAAYsB,EAAQ,eAChDC,KAAKW,aAAeJ,EAAW,GAC/BP,KAAKW,aAAaD,MAAQjC,EAAYsB,EAAQ,aAE9CC,KAAKY,YACLZ,KAAKa,YAELb,KAAKE,UAAUY,SAAWd,KAAKe,SAASC,KAAKhB,MACtCA,MAOTe,SAAU,WACRf,KAAKY,YACLZ,KAAKa,YACLb,KAAKiB,KAAK,UACRC,aAAclB,KAAK,cACnBmB,WAAYnB,KAAK,eAOrBY,UAAW,WACTZ,KAAK,cAAgBA,KAAKS,eAAeC,MACzCV,KAAK,YAAcA,KAAKW,aAAaD,OAMvCG,UAAW,WACTb,KAAKS,eAAeW,IAAMpB,KAAKW,aAAaD,MAC5CV,KAAKW,aAAaU,IAAMrB,KAAKS,eAAeC,OAS9CL,SACE","file":"date-range-selector.js","sourcesContent":["// Copyright 2014 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/* global gapi */\n\n/**\n * A DateRangeSelector component for the Embed API.\n */\ngapi.analytics.ready(function() {\n\n  var nDaysAgo = /(\\d+)daysAgo/;\n  var dateFormat = /\\d{4}\\-\\d{2}\\-\\d{2}/;\n\n  /**\n   * Convert a date acceptable to the Core Reporting API (e.g. `today`,\n   * `yesterday` or `NdaysAgo`) into the format YYYY-MM-DD. Dates\n   * already in that format are simply returned.\n   * @return {string} The formatted date.\n   */\n  function convertDate(str) {\n    // If str is in the proper format, do nothing.\n    if (dateFormat.test(str)) return str;\n\n    var match = nDaysAgo.exec(str);\n    if (match) {\n      return daysAgo(+match[1]);\n    } else if (str == 'today') {\n      return daysAgo(0);\n    } else if (str == 'yesterday') {\n      return daysAgo(1);\n    } else {\n      throw new Error('Cannot convert date ' + str);\n    }\n  }\n\n  /**\n   * Accept a number and return a date formatted as YYYY-MM-DD that\n   * represents that many days ago.\n   * @return {string} The formatted date.\n   */\n  function daysAgo(numDays) {\n    var date = new Date();\n    date.setDate(date.getDate() - numDays);\n    var month = String(date.getMonth() + 1);\n    month = month.length == 1 ? '0' + month: month;\n    var day = String(date.getDate());\n    day = day.length == 1 ? '0' + day: day;\n    return date.getFullYear() + '-' + month + '-' + day;\n  }\n\n  gapi.analytics.createComponent('DateRangeSelector', {\n\n    /**\n     * Initialize the DateRangeSelector instance and render it to the page.\n     * @return {DateRangeSelector} The instance.\n     */\n    execute: function() {\n      var options = this.get();\n      options['start-date'] = options['start-date'] || '7daysAgo';\n      options['end-date'] = options['end-date'] || 'yesterday';\n\n      // Allow container to be a string ID or an HTMLElement.\n      this.container = typeof options.container == 'string' ?\n        document.getElementById(options.container) : options.container;\n\n      // Allow the template to be overridden.\n      if (options.template) this.template = options.template;\n\n      this.container.innerHTML = this.template;\n      var dateInputs = this.container.querySelectorAll('input');\n\n      this.startDateInput = dateInputs[0];\n      this.startDateInput.value = convertDate(options['start-date']);\n      this.endDateInput = dateInputs[1];\n      this.endDateInput.value = convertDate(options['end-date']);\n\n      this.setValues();\n      this.setMinMax();\n\n      this.container.onchange = this.onChange.bind(this);\n      return this;\n    },\n\n    /**\n     * Emit a change event based on the currently selected dates.\n     * Pass an object containing the start date and end date.\n     */\n    onChange: function() {\n      this.setValues();\n      this.setMinMax();\n      this.emit('change', {\n        'start-date': this['start-date'],\n        'end-date': this['end-date']\n      });\n    },\n\n    /**\n     * Updates the instance properties based on the input values.\n     */\n    setValues: function() {\n      this['start-date'] = this.startDateInput.value;\n      this['end-date'] = this.endDateInput.value;\n    },\n\n    /**\n     * Updates the input min and max attributes so there's no overlap.\n     */\n    setMinMax: function() {\n      this.startDateInput.max = this.endDateInput.value;\n      this.endDateInput.min = this.startDateInput.value;\n    },\n\n    /**\n     * The html structure used to build the component. Developers can\n     * override this by passing it to the component constructor.\n     * The only requirement is that the structure contain two inputs, the\n     * first will be the start date and the second will be the end date.\n     */\n    template:\n      '<div class=\"DateRangeSelector\">' +\n      '  <div class=\"DateRangeSelector-item\">' +\n      '    <label>Start Date</label> ' +\n      '    <input type=\"date\">' +\n      '  </div>' +\n      '  <div class=\"DateRangeSelector-item\">' +\n      '    <label>End Date</label> ' +\n      '    <input type=\"date\">' +\n      '  </div>' +\n      '</div>'\n  });\n\n});\n"],"sourceRoot":"/source/"}