{"version":3,"sources":["webpack:///webpack/bootstrap 1e4165bbc4920e5b9f36?7f10*","webpack:///./src/javascript/embed-api/components/view-selector2.js","webpack:///./~/javascript-api-utils/lib/account-summaries/index.js","webpack:///./~/javascript-api-utils/lib/account-summaries/account-summaries.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACpBA;;;;;;;;;AAMA,MAAK,SAAL,CAAe,KAAf,CAAqB,YAAW;;AAE9B,QAAK,SAAL,CAAe,eAAf,CAA+B,eAA/B,EAAgD;;;;;;;AAO9C,cAAS,mBAAW;AAClB,YAAK,MAAL,CAAY,YAAW;AACrB,cAAK,eAAL,GADqB;AAErB,aAAI,KAAK,QAAL,EAAe;AACjB,gBAAK,OAAL,GADiB;AAEjB,gBAAK,SAAL,GAFiB;UAAnB;QAFU,CAMV,IANU,CAML,IANK,CAAZ,EADkB;;AASlB,cAAO,IAAP,CATkB;MAAX;;;;;;;;;AAmBT,UAAK,aAAS,IAAT,EAAe;;AAElB,WAAI,CAAC,CAAC,KAAK,GAAL,GACF,CAAC,CAAC,KAAK,MAAL,GACF,CAAC,CAAC,KAAK,UAAL,GACF,CAAC,CAAC,KAAK,SAAL,GAAiB,CAHnB,EAGsB;;AAExB,eAAM,IAAI,KAAJ,CAAU,uDACZ,qDADY,CAAhB,CAFwB;QAH1B;;AASA,WAAI,KAAK,SAAL,IAAkB,KAAK,SAAL,EAAgB;AACpC,eAAM,IAAI,KAAJ,CAAU,uDACZ,gCADY,CAAhB,CADoC;QAAtC;;AAKA,WAAI,WAAW,KAAK,GAAL,EAAX,CAhBc;;AAkBlB,WAAI,SAAS,GAAT,IAAgB,KAAK,GAAL,IAChB,SAAS,MAAT,IAAmB,KAAK,MAAL,IACnB,SAAS,UAAT,IAAuB,KAAK,UAAL,IACvB,SAAS,SAAT,IAAsB,KAAK,SAAL,EAAgB;;;;;;AAMxC,kBAAS,GAAT,GAAe,IAAf,CANwC;AAOxC,kBAAS,MAAT,GAAkB,IAAlB,CAPwC;AAQxC,kBAAS,UAAT,GAAsB,IAAtB,CARwC;AASxC,kBAAS,SAAT,GAAqB,IAArB,CATwC;QAH1C;;;AAlBkB,cAkCX,KAAK,SAAL,CAAe,SAAf,CAAyB,SAAzB,CAAmC,GAAnC,CAAuC,IAAvC,CAA4C,IAA5C,EAAkD,IAAlD,CAAP,CAlCkB;MAAf;;;;;;;;;;AA6CL,aAAQ,gBAAS,EAAT,EAAa;AACnB,WAAI,OAAO,IAAP,CADe;;AAGnB,gBAAS,WAAT,GAAuB;AACrB,oCAAiB,GAAjB,GAAuB,IAAvB,CACE,UAAS,SAAT,EAAoB;AAClB,gBAAK,SAAL,GAAiB,SAAjB,CADkB;AAElB,gBAAK,QAAL,GAAgB,KAAK,SAAL,CAAe,GAAf,EAAhB,CAFkB;AAGlB,gBAHkB;UAApB,EAKA,UAAS,GAAT,EAAc;AACZ,gBAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB,EADY;UAAd,CANF,CADqB;QAAvB;;AAaA,WAAI,KAAK,SAAL,CAAe,IAAf,CAAoB,YAApB,EAAJ,EAAwC;AACtC,uBADsC;QAAxC,MAGK;AACH,cAAK,SAAL,CAAe,IAAf,CAAoB,EAApB,CAAuB,QAAvB,EAAiC,WAAjC,EADG;QAHL;MAhBM;;;;;;;;AA8BR,sBAAiB,2BAAW;;AAE1B,WAAI,OAAO,KAAK,GAAL,EAAP,CAFsB;AAG1B,WAAI,MAAM,UAAU,IAAV,CAAN,CAHsB;AAI1B,WAAI,aAAJ;WAAU,gBAAV;WAAmB,iBAAnB;;;AAJ0B,WAOtB,CAAC,KAAK,SAAL,CAAe,GAAf,GAAqB,MAArB,EAA6B;AAChC,gBAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,IAAI,KAAJ,CAAU,iCAChC,gDADgC,GAEhC,6BAFgC,CAA7B,CAAP,CADgC;QAAlC;;;AAP0B,WActB,CAAC,GAAD,EAAM;AACR,mBAAU,KAAK,QAAL,CAAc,CAAd,CAAV,CADQ;AAER,oBAAW,WAAW,QAAQ,UAAR,IAAsB,QAAQ,UAAR,CAAmB,CAAnB,CAAjC,CAFH;AAGR,gBAAO,YAAY,SAAS,KAAT,IAAkB,SAAS,KAAT,CAAe,CAAf,CAA9B,CAHC;QAAV,MAKK;AACH,iBAAQ,IAAI,IAAJ;AACN,gBAAK,QAAL;AACE,oBAAO,KAAK,SAAL,CAAe,UAAf,CAA0B,IAAI,KAAJ,CAAjC,CADF;AAEE,uBAAU,KAAK,SAAL,CAAe,qBAAf,CAAqC,IAAI,KAAJ,CAA/C,CAFF;AAGE,wBAAW,KAAK,SAAL,CAAe,yBAAf,CAAyC,IAAI,KAAJ,CAApD,CAHF;AAIE,mBAJF;AADF,gBAMO,YAAL;AACE,wBAAW,KAAK,SAAL,CAAe,cAAf,CAA8B,IAAI,KAAJ,CAAzC,CADF;AAEE,uBAAU,KAAK,SAAL,CAAe,yBAAf,CAAyC,IAAI,KAAJ,CAAnD,CAFF;AAGE,oBAAO,YAAY,SAAS,KAAT,IAAkB,SAAS,KAAT,CAAe,CAAf,CAA9B,CAHT;AAIE,mBAJF;AANF,gBAWO,WAAL;AACE,uBAAU,KAAK,SAAL,CAAe,UAAf,CAA0B,IAAI,KAAJ,CAApC,CADF;AAEE,wBAAW,WAAW,QAAQ,UAAR,IAAsB,QAAQ,UAAR,CAAmB,CAAnB,CAAjC,CAFb;AAGE,oBAAO,YAAY,SAAS,KAAT,IAAkB,SAAS,KAAT,CAAe,CAAf,CAA9B,CAHT;AAIE,mBAJF;AAXF,UADG;QALL;;AAyBA,WAAI,WAAW,QAAX,IAAuB,IAAvB,EAA6B;;;AAG/B,aAAI,WAAW,KAAK,OAAL,IACX,YAAY,KAAK,QAAL,IACZ,QAAQ,KAAK,IAAL,EAAW;;;AAGrB,gBAAK,QAAL,GAAgB;AACd,sBAAS,WAAW,WAAW,KAAK,OAAL;AAC/B,uBAAU,YAAY,YAAY,KAAK,QAAL;AAClC,mBAAM,QAAQ,QAAQ,KAAK,IAAL;YAHxB,CAHqB;;AASrB,gBAAK,OAAL,GAAe,OAAf,CATqB;AAUrB,gBAAK,UAAL,GAAkB,QAAQ,UAAR,CAVG;AAWrB,gBAAK,QAAL,GAAgB,QAAhB,CAXqB;AAYrB,gBAAK,KAAL,GAAa,YAAY,SAAS,KAAT,CAZJ;AAarB,gBAAK,IAAL,GAAY,IAAZ,CAbqB;AAcrB,gBAAK,GAAL,GAAW,QAAQ,QAAQ,KAAK,EAAL,CAdN;UAFvB;QAHF,MAsBK;AACH,cAAK,IAAL,CAAU,OAAV,EAAmB,IAAI,KAAJ,CAAU,uCACzB,IAAI,IAAJ,CAAS,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAD,CADO,GACD,KADC,GACO,IAAI,KAAJ,CADpC,EADG;QAtBL;MAvCe;;;;;;;AAwEjB,cAAS,mBAAW;;AAElB,WAAI,OAAO,KAAK,GAAL,EAAP,CAFc;;AAIlB,YAAK,SAAL,GAAiB,OAAO,KAAK,SAAL,IAAkB,QAAzB,GACb,SAAS,cAAT,CAAwB,KAAK,SAAL,CADX,GAC6B,KAAK,SAAL,CAL5B;;AAOlB,YAAK,SAAL,CAAe,SAAf,GAA2B,KAAK,QAAL,IAAiB,KAAK,QAAL,CAP1B;AAQlB,WAAI,UAAU,KAAK,SAAL,CAAe,gBAAf,CAAgC,QAAhC,CAAV,CARc;;AAUlB,WAAI,WAAW,KAAK,QAAL,CAVG;AAWlB,WAAI,aAAa,KAAK,UAAL,IAAmB,CAAC,EAAC,MAAM,SAAN,EAAiB,IAAI,EAAJ,EAAnB,CAAnB,CAXC;AAYlB,WAAI,QAAQ,KAAK,KAAL,IAAc,CAAC,EAAC,MAAM,SAAN,EAAiB,IAAI,EAAJ,EAAnB,CAAd,CAZM;;AAclB,oBAAa,QAAQ,CAAR,CAAb,EAAyB,QAAzB,EAAmC,KAAK,OAAL,CAAa,EAAb,CAAnC,CAdkB;AAelB,oBAAa,QAAQ,CAAR,CAAb,EAAyB,UAAzB,EAAqC,KAAK,QAAL,IAAiB,KAAK,QAAL,CAAc,EAAd,CAAtD,CAfkB;AAgBlB,oBAAa,QAAQ,CAAR,CAAb,EAAyB,KAAzB,EAAgC,KAAK,IAAL,IAAa,KAAK,IAAL,CAAU,EAAV,CAA7C,CAhBkB;;AAkBlB,eAAQ,CAAR,EAAW,QAAX,GACI,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,EAA8B,QAAQ,CAAR,CAA9B,EAA0C,WAA1C,CADJ,CAlBkB;AAoBlB,eAAQ,CAAR,EAAW,QAAX,GACI,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,EAA8B,QAAQ,CAAR,CAA9B,EAA0C,YAA1C,CADJ,CApBkB;AAsBlB,eAAQ,CAAR,EAAW,QAAX,GACI,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,EAA8B,QAAQ,CAAR,CAA9B,EAA0C,QAA1C,CADJ,CAtBkB;MAAX;;;;;;;;AAgCT,gBAAW,qBAAW;;AAEpB,WAAI,QAAQ;AACV,kBAAS,KAAK,OAAL;AACT,mBAAU,KAAK,QAAL;AACV,eAAM,KAAK,IAAL;AACN,iBAAQ,KAAK,IAAL,CAAU,EAAV;AACR,cAAK,KAAK,IAAL,IAAa,QAAQ,KAAK,IAAL,CAAU,EAAV;QALxB,CAFgB;;AAUpB,WAAI,KAAK,QAAL,EAAe;AACjB,aAAI,KAAK,QAAL,CAAc,OAAd,EAAuB,KAAK,IAAL,CAAU,eAAV,EAA2B,KAA3B,EAA3B;AACA,aAAI,KAAK,QAAL,CAAc,QAAd,EAAwB,KAAK,IAAL,CAAU,gBAAV,EAA4B,KAA5B,EAA5B;AACA,aAAI,KAAK,QAAL,CAAc,IAAd,EAAoB;AACtB,gBAAK,IAAL,CAAU,YAAV,EAAwB,KAAxB,EADsB;AAEtB,gBAAK,IAAL,CAAU,WAAV,EAAuB,KAAvB;;;AAFsB,eAKtB,CAAK,IAAL,CAAU,QAAV,EAAoB,MAAM,GAAN,CAApB,CALsB;UAAxB;QAHF;;AAYA,YAAK,QAAL,GAAgB,IAAhB,CAtBoB;MAAX;;;;;;;;;AAgCX,oBAAe,uBAAS,MAAT,EAAiB,QAAjB,EAA2B;AACxC,WAAI,OAAO,EAAP,CADoC;AAExC,YAAK,QAAL,IAAiB,OAAO,KAAP,CAFuB;;AAIxC,YAAK,GAAL,CAAS,IAAT,EAJwC;AAKxC,YAAK,OAAL,GALwC;MAA3B;;;;;;;;;AAef,eACE,gCACA,oCADA,GAEA,4BAFA,GAGA,yCAHA,GAIA,UAJA,GAKA,oCALA,GAMA,6BANA,GAOA,yCAPA,GAQA,UARA,GASA,oCATA,GAUA,yBAVA,GAWA,yCAXA,GAYA,UAZA,GAaA,QAbA;IA7PJ;;;;;;;;;;;AAF8B,YAyRrB,YAAT,CAAsB,MAAtB,EAA8B,OAA9B,EAAuC,EAAvC,EAA2C;AACzC,YAAO,SAAP,GAAmB,QAAQ,GAAR,CAAY,UAAS,MAAT,EAAiB;AAC9C,WAAI,WAAW,OAAO,EAAP,IAAa,EAAb,GAAkB,WAAlB,GAAgC,GAAhC,CAD+B;AAE9C,cAAO,aAAa,QAAb,GAAwB,SAAxB,GAAoC,OAAO,EAAP,GAAY,IAAhD,GACH,OAAO,IAAP,GAAc,WADX,CAFuC;MAAjB,CAAZ,CAIhB,IAJgB,CAIX,EAJW,CAAnB,CADyC;IAA3C;;;;;;;;;;;AAzR8B,YA2SrB,SAAT,CAAmB,IAAnB,EAAyB;AACvB,SAAI,KAAK,GAAL,IAAY,KAAK,MAAL,EAAa;AAC3B,cAAO,EAAC,MAAM,QAAN,EAAgB,OAAO,KAAK,MAAL,IAC1B,KAAK,GAAL,IAAY,KAAK,GAAL,CAAS,OAAT,CAAiB,MAAjB,EAAyB,EAAzB,CAAZ,EADL,CAD2B;MAA7B,MAIK,IAAI,KAAK,UAAL,EAAiB;AACxB,cAAO,EAAC,MAAM,YAAN,EAAoB,OAAO,KAAK,UAAL,EAAnC,CADwB;MAArB,MAGA,IAAI,KAAK,SAAL,EAAgB;AACvB,cAAO,EAAC,MAAM,WAAN,EAAmB,OAAO,KAAK,SAAL,EAAlC,CADuB;MAApB;IARP;EA3SmB,CAArB;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAY,aAAa;AACzB;AACA;AACA;;AAEA,sCAAqC,eAAe;AACpD;AACA;AACA;AACA,6BAA4B,aAAa,EAAE;;AAE3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB,eAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,IAAI;AACtB,qBAAoB,IAAI;AACxB,0BAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA,YAAW,MAAM;AACjB;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA0B,6BAA6B;;AAEvD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,iCAAgC,wCAAwC;;AAExE;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,+BAA8B,mCAAmC;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,cAAc;AACzB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,YAAW,cAAc;AACzB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,YAAW,cAAc;AACzB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;AAIA;AACA;AACA,YAAW,cAAc;AACzB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,YAAW,cAAc;AACzB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA","file":"view-selector2.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1e4165bbc4920e5b9f36\n **/","// Copyright 2014 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/* global gapi */\n\n\nimport accountSummaries from 'javascript-api-utils/lib/account-summaries';\n\n\n/**\n * A ViewSelector2 component for the Embed API.\n */\ngapi.analytics.ready(function() {\n\n  gapi.analytics.createComponent('ViewSelector2', {\n\n    /**\n     * Render the view selector instance on the page or update an existing\n     * instance if any options have changed.\n     * @return {ViewSelector2} The instance.\n     */\n    execute: function() {\n      this.setup_(function() {\n        this.updateAccounts_();\n        if (this.changed_) {\n          this.render_();\n          this.onChange_();\n        }\n      }.bind(this));\n\n      return this;\n    },\n\n    /**\n     * Extend the base `set` function with some error checking and handling of\n     * ID data.\n     * @extends gapi.analytics.Component.prototype.set\n     * @param {Object} opts The options to set.\n     * @return {ViewSelector2}\n     */\n    set: function(opts) {\n\n      if (!!opts.ids +\n          !!opts.viewId +\n          !!opts.propertyId +\n          !!opts.accountId > 1) {\n\n        throw new Error('You cannot specify more than one of the following ' +\n            'options: \"ids\", \"viewId\", \"accountId\", \"propertyId\"');\n      }\n\n      if (opts.container && this.container) {\n        throw new Error('You cannot change containers once a view selector ' +\n            'has been rendered on the page.');\n      }\n\n      let prevOpts = this.get();\n\n      if (prevOpts.ids != opts.ids ||\n          prevOpts.viewId != opts.viewId ||\n          prevOpts.propertyId != opts.propertyId ||\n          prevOpts.accountId != opts.accountId) {\n\n        // If new ID data is being set, first unset all existing ID data.\n        // This prevents the problem where you set an account ID then set a\n        // view ID for a new view in a different account. Both IDs should not\n        // persist or there will be problems.\n        prevOpts.ids = null;\n        prevOpts.viewId = null;\n        prevOpts.propertyId = null;\n        prevOpts.accountId = null;\n      }\n\n      // Call super.\n      return gapi.analytics.Component.prototype.set.call(this, opts);\n    },\n\n    /**\n     * Set up the view selector instance with values from the Management API's\n     * accountSummaries.list method via the `accountSummaries` module.\n     * If the user has not authorized, wait until that happens before\n     * requesting the account summaries.\n     * @param {Function} cb A function to be invoked once authorization has\n     *     succeeded and the accountSummaries have been retrieved.\n     */\n    setup_: function(cb) {\n      let self = this;\n\n      function onAuthorize() {\n        accountSummaries.get().then(\n          function(summaries) {\n            self.summaries = summaries;\n            self.accounts = self.summaries.all();\n            cb();\n          },\n          function(err) {\n            self.emit('error', err);\n          }\n        );\n      }\n\n      if (gapi.analytics.auth.isAuthorized()) {\n        onAuthorize();\n      }\n      else {\n        gapi.analytics.auth.on('signIn', onAuthorize);\n      }\n    },\n\n    /**\n     * Update the view selector instance properties with new account\n     * information.\n     * @throws {Error} If the user has set an ID value for an account they\n     *     don't have access to.\n     */\n    updateAccounts_: function() {\n\n      let opts = this.get();\n      let ids = getIdProp(opts);\n      let view, account, property;\n\n      // If the user does not have any accounts, emit an error.\n      if (!this.summaries.all().length) {\n        return this.emit('error', new Error('This user does not have any ' +\n            'Google Analytics accounts. You can sign up at ' +\n            '\"www.google.com/analytics\".'));\n      }\n\n      // If there are no id props, set the defaults.\n      if (!ids) {\n        account = this.accounts[0];\n        property = account && account.properties && account.properties[0];\n        view = property && property.views && property.views[0];\n      }\n      else {\n        switch (ids.prop) {\n          case 'viewId':\n            view = this.summaries.getProfile(ids.value);\n            account = this.summaries.getAccountByProfileId(ids.value);\n            property = this.summaries.getWebPropertyByProfileId(ids.value);\n            break;\n          case 'propertyId':\n            property = this.summaries.getWebProperty(ids.value);\n            account = this.summaries.getAccountByWebPropertyId(ids.value);\n            view = property && property.views && property.views[0];\n            break;\n          case 'accountId':\n            account = this.summaries.getAccount(ids.value);\n            property = account && account.properties && account.properties[0];\n            view = property && property.views && property.views[0];\n            break;\n        }\n      }\n\n      if (account || property || view) {\n\n        // Only update if something has changed.\n        if (account != this.account ||\n            property != this.property ||\n            view != this.view) {\n\n          // Store what value changed.\n          this.changed_ = {\n            account: account && account != this.account,\n            property: property && property != this.property,\n            view: view && view != this.view\n          };\n\n          this.account = account;\n          this.properties = account.properties;\n          this.property = property;\n          this.views = property && property.views;\n          this.view = view;\n          this.ids = view && 'ga:' + view.id;\n        }\n      }\n      else {\n        this.emit('error', new Error('This user does not have access to ' +\n            ids.prop.slice(0, -2) + ' : ' + ids.value));\n      }\n    },\n\n    /**\n     * Render the view selector based on the users accounts and the\n     * pre-defined template. Also add event handlers to watch for\n     * changes.\n     */\n    render_: function() {\n\n      let opts = this.get();\n\n      this.container = typeof opts.container == 'string' ?\n          document.getElementById(opts.container) : opts.container;\n\n      this.container.innerHTML = opts.template || this.template;\n      let selects = this.container.querySelectorAll('select');\n\n      let accounts = this.accounts;\n      let properties = this.properties || [{name: '(Empty)', id: ''}];\n      let views = this.views || [{name: '(Empty)', id: ''}];\n\n      updateSelect(selects[0], accounts, this.account.id);\n      updateSelect(selects[1], properties, this.property && this.property.id);\n      updateSelect(selects[2], views, this.view && this.view.id);\n\n      selects[0].onchange =\n          this.onUserSelect_.bind(this, selects[0], 'accountId');\n      selects[1].onchange =\n          this.onUserSelect_.bind(this, selects[1], 'propertyId');\n      selects[2].onchange =\n          this.onUserSelect_.bind(this, selects[2], 'viewId');\n    },\n\n    /**\n     * A callback that is invoked from the `execute` method whenever the ID\n     * data has changed. Most of the time this change happens when the user\n     * has selected a new view in the UI, but it can also happen\n     * programmatically via the `set` method.\n     */\n    onChange_: function() {\n\n      let props = {\n        account: this.account,\n        property: this.property,\n        view: this.view,\n        viewId: this.view.id,\n        ids: this.view && 'ga:' + this.view.id\n      };\n\n      if (this.changed_) {\n        if (this.changed_.account) this.emit('accountChange', props);\n        if (this.changed_.property) this.emit('propertyChange', props);\n        if (this.changed_.view) {\n          this.emit('viewChange', props);\n          this.emit('idsChange', props);\n\n          // For backwards compatibility with the original ViewSelector.\n          this.emit('change', props.ids);\n        }\n      }\n\n      this.changed_ = null;\n    },\n\n    /**\n     * The handler assigned to the `onchange` method of each of the select\n     * elements. The context is bound to the view selector instance and it is\n     * invoked with the element and property as its arguments.\n     * @param {HTMLSelectElement} select The select element.\n     * @param {string} property The property key to be set on the instance.\n     */\n    onUserSelect_: function(select, property) {\n      let data = {};\n      data[property] = select.value;\n\n      this.set(data);\n      this.execute();\n    },\n\n    /**\n     * The html structure used to build the component. Developers can override\n     * this by passing it to the component constructor.  The only requirement\n     * is that the structure contain three selects.  The first will be the\n     * account select, the second will be the property select, and the third\n     * will be the view select. Order is important.\n     */\n    template:\n      '<div class=\"ViewSelector2\">' +\n      '  <div class=\"ViewSelector2-item\">' +\n      '    <label>Account</label>' +\n      '    <select class=\"FormField\"></select>' +\n      '  </div>' +\n      '  <div class=\"ViewSelector2-item\">' +\n      '    <label>Property</label>' +\n      '    <select class=\"FormField\"></select>' +\n      '  </div>' +\n      '  <div class=\"ViewSelector2-item\">' +\n      '    <label>View</label>' +\n      '    <select class=\"FormField\"></select>' +\n      '  </div>' +\n      '</div>'\n  });\n\n\n  /**\n   * Update a select with the specified options and optionally choose the\n   * selected option based on the matching ID.\n   * @param {HTMLSelectElement} select The select element to update.\n   * @param {Array} options An Array of objects with the keys\n   *     `name` and `id`.\n   * @param {string} [id] An optional value used to determine the selected\n   *     option.\n   */\n  function updateSelect(select, options, id) {\n    select.innerHTML = options.map(function(option) {\n      let selected = option.id == id ? 'selected ' : ' ';\n      return '<option ' + selected + 'value=\"' + option.id + '\">' +\n          option.name + '</option>';\n    }).join('');\n  }\n\n\n  /**\n   * Given an options object containing a single key that could be either\n   * \"ids\", \"viewId\", \"propertyId\", or \"accountId\", return a new object\n   * specifying that key in its `prop` property. If the passed property is\n   * \"ids\" convert it to \"viewId\".\n   * @param {Object} opts An options object.\n   * @return {Object} An object specifying what ID property and value were\n   *     passed.\n   */\n  function getIdProp(opts) {\n    if (opts.ids || opts.viewId) {\n      return {prop: 'viewId', value: opts.viewId ||\n          (opts.ids && opts.ids.replace(/^ga:/, ''))};\n    }\n    else if (opts.propertyId) {\n      return {prop: 'propertyId', value: opts.propertyId};\n    }\n    else if (opts.accountId) {\n      return {prop: 'accountId', value: opts.accountId};\n    }\n  }\n\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/javascript/embed-api/components/view-selector2.js\n **/","// Copyright 2015 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/* global gapi */\n\nvar AccountSummaries = require('./account-summaries');\n\n\nvar API_PATH = '/analytics/v3/management/accountSummaries';\n\n\n/**\n * Store the accountSummaries result in a promise so the API isn't\n * queried unneccesarily.\n */\nvar cache;\n\n\n/**\n * Make a request to the Management API's accountSummaries#list method.\n * If the requests returns a partial, paginated response, query again\n * until the full summaries are retrieved.\n * @return {goog.Promise} A promise that will be resolved with an\n *     AccountSummaries instance.\n */\nfunction requestAccountSummaries() {\n\n  var promise = gapi.client.request({path: API_PATH})\n      // An extra `then` is needed here because `.list` doesn't return a\n      // \"real\" promise, just a thenable. Calling `.then` gets us access\n      // to the underlying goog.Promise instance and thus its constructor.\n      .then(function(resp) { return resp; });\n\n  return new promise.constructor(function(resolve, reject) {\n\n    // Store the summaries array in the closure so multiple requests can\n    // concat to it.\n    var summaries = [];\n\n    promise.then(function fn(resp) {\n      var result = resp.result;\n      if (result.items) {\n        summaries = summaries.concat(result.items);\n      }\n      else {\n        reject(new Error('You do not have any Google Analytics accounts. ' +\n            'Go to http://google.com/analytics to sign up.'));\n      }\n\n      if (result.startIndex + result.itemsPerPage <= result.totalResults) {\n        gapi.client.request({\n          path: API_PATH,\n          params: {\n            'start-index': result.startIndex + result.itemsPerPage\n          }\n        })\n        // Recursively call this function until the full results are in.\n        .then(fn);\n      }\n      else {\n        resolve(new AccountSummaries(summaries));\n      }\n    })\n    // Reject the promise if there are any uncaught errors;\n    .then(null, reject);\n  });\n}\n\n\n/**\n * @module accountSummaries\n *\n * This module requires the `gapi.client` library to be loaded on the page\n * and the user to be authenticated.\n */\nmodule.exports = {\n\n  /**\n   * Return the `requestAccountSummaries` promise. If the promise exists,\n   * return it to avoid multiple requests. If the promise does not exist,\n   * initiate the request and cache the promise.\n   *\n   * @param {boolean} noCache When true make a request no matter what.\n   * @return {goog.Promise} A promise fulfilled with an AccountSummaries\n   *     instance.\n   */\n  get: function(noCache) {\n    if (noCache) cache = null;\n    return cache || (cache = requestAccountSummaries());\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/javascript-api-utils/lib/account-summaries/index.js\n ** module id = 1\n ** module chunks = 2\n **/","// Copyright 2015 Google Inc. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * @constuctor AccountSummaries\n *\n * Takes an array of accounts and writes the following new properties:\n * `accounts_`, `webProperties_`, `profiles_`, `accountsById_`,\n * `webPropertiesById_`, and `profilesById_`.\n * Each of the ___ById properties contains an array of objects where the\n * key is the entity ID and the value is an object containing the entity and\n * the entity's parents. For example, an object in the `profilesById_` array\n * might look like this:\n *     {\n *       \"1234\": {\n *         self: {...},\n *         parent: {...},\n *         grandParent: {...}\n *       }\n *     }\n *\n * It also aliases the properties `webProperties` to `properties` and\n * `profiles` to `views` within the `accounts` array tree.\n\n * @param {Array} accounts A list of accounts in the format returned by the\n *     management API's accountSummaries#list method.\n * @returns {AccountSummaries}\n */\nfunction AccountSummaries(accounts) {\n\n  this.accounts_ = accounts;\n  this.webProperties_ = [];\n  this.profiles_ = [];\n\n  this.accountsById_ = {};\n  this.webPropertiesById_ = this.propertiesById_ = {};\n  this.profilesById_ = this.viewsById_ = {};\n\n  for (var i = 0, account; account = this.accounts_[i]; i++) {\n\n    this.accountsById_[account.id] = {\n      self: account\n    };\n\n    if (!account.webProperties) continue;\n\n    // Add aliases.\n    alias(account, 'webProperties', 'properties');\n\n    for (var j = 0, webProperty; webProperty = account.webProperties[j]; j++) {\n\n      this.webProperties_.push(webProperty);\n      this.webPropertiesById_[webProperty.id] = {\n        self: webProperty,\n        parent: account\n      };\n\n      if (!webProperty.profiles) continue;\n\n      // Add aliases.\n      alias(webProperty, 'profiles', 'views');\n\n      for (var k = 0, profile; profile = webProperty.profiles[k]; k++) {\n\n        this.profiles_.push(profile);\n        this.profilesById_[profile.id] = {\n          self: profile,\n          parent: webProperty,\n          grandParent: account\n        };\n      }\n    }\n  }\n}\n\n\n/**\n * Return a list of all accounts this user has access to.\n * Since the accounts contain the web properties and the web properties contain\n * the profiles, this list contains everything.\n * @return {Array}\n */\nAccountSummaries.prototype.all = function() {\n  return this.accounts_;\n};\n\nalias(AccountSummaries.prototype, 'all',\n                                  'allAccounts');\n\n\n/**\n * Return a list of all web properties this user has access to.\n * @return {Array}\n */\nAccountSummaries.prototype.allWebProperties = function() {\n  return this.webProperties_;\n};\n\nalias(AccountSummaries.prototype, 'allWebProperties',\n                                  'allProperties');\n\n\n/**\n * Return a list of all profiles this user has access to.\n * @return {Array}\n */\nAccountSummaries.prototype.allProfiles = function() {\n  return this.profiles_;\n};\n\nalias(AccountSummaries.prototype, 'allProfiles',\n                                  'allViews');\n\n\n/**\n * Returns an account, web property or profile given the passed ID in the\n * `idData` object.  The ID data object can contain only one of the\n * following properties: \"accountId\", \"webPropertyId\", \"propertyId\",\n * \"profileId\", or \"viewId\".  If more than one key is passed, an error is\n * thrown.\n *\n * @param {Object} obj An object with no more than one of the following\n *     keys: \"accountId\", \"webPropertyId\", \"propertyId\", \"profileId\" or\n *     \"viewId\".\n * @return {Object|undefined} The matching account, web property, or\n *     profile. If none are found, undefined is returned.\n */\nAccountSummaries.prototype.get = function(obj) {\n  if (!!obj.accountId +\n      !!obj.webPropertyId +\n      !!obj.propertyId +\n      !!obj.profileId +\n      !!obj.viewId > 1) {\n\n    throw new Error('get() only accepts an object with a single ' +\n        'property: either \"accountId\", \"webPropertyId\", \"propertyId\", ' +\n        '\"profileId\" or \"viewId\"');\n  }\n  return this.getProfile(obj.profileId || obj.viewId) ||\n      this.getWebProperty(obj.webPropertyId || obj.propertyId) ||\n      this.getAccount(obj.accountId);\n};\n\n\n/**\n * Get an account given its ID.\n * @param {string|number} accountId\n * @return {Object} The account with the given ID.\n */\nAccountSummaries.prototype.getAccount = function(accountId) {\n  return this.accountsById_[accountId] &&\n      this.accountsById_[accountId].self;\n};\n\n\n/**\n * Get a web property given its ID.\n * @param {string} webPropertyId\n * @return {Object} The web property with the given ID.\n */\nAccountSummaries.prototype.getWebProperty = function(webPropertyId) {\n  return this.webPropertiesById_[webPropertyId] &&\n      this.webPropertiesById_[webPropertyId].self;\n};\n\nalias(AccountSummaries.prototype, 'getWebProperty',\n                                  'getProperty');\n\n\n/**\n * Get a profile given its ID.\n * @param {string|number} profileId\n * @return {Object} The profile with the given ID.\n */\nAccountSummaries.prototype.getProfile = function(profileId) {\n  return this.profilesById_[profileId] &&\n      this.profilesById_[profileId].self;\n};\n\nalias(AccountSummaries.prototype, 'getProfile',\n                                  'getView');\n\n\n/**\n * Get an account given the ID of one of its profiles.\n * @param {string|number} profileId\n * @return {Object} The account containing this profile.\n */\nAccountSummaries.prototype.getAccountByProfileId = function(profileId) {\n  return this.profilesById_[profileId] &&\n      this.profilesById_[profileId].grandParent;\n};\n\n\nalias(AccountSummaries.prototype, 'getAccountByProfileId',\n                                  'getAccountByViewId');\n\n\n\n/**\n * Get a web property given the ID of one of its profile.\n * @param {string|number} profileId\n * @return {Object} The web property containing this profile.\n */\nAccountSummaries.prototype.getWebPropertyByProfileId = function(profileId) {\n  return this.profilesById_[profileId] &&\n      this.profilesById_[profileId].parent;\n};\n\nalias(AccountSummaries.prototype, 'getWebPropertyByProfileId',\n                                  'getPropertyByViewId');\n\n\n/**\n * Get an account given the ID of one of its web properties.\n * @param {string|number} webPropertyId\n * @return {Object} The account containing this web property.\n */\nAccountSummaries.prototype.getAccountByWebPropertyId = function(webPropertyId) {\n  return this.webPropertiesById_[webPropertyId] &&\n      this.webPropertiesById_[webPropertyId].parent;\n};\n\nalias(AccountSummaries.prototype, 'getAccountByWebPropertyId',\n                                  'getAccountByPropertyId');\n\n\n/**\n * Alias a property of an object using es5 getters. If es5 getters are not\n * supported, just add the aliased property directly to the object.\n * @param {Object} object The object for which you want to alias properties.\n * @param {string} referenceProp The reference property.\n * @param {string} aliasName The reference property's alias name.\n */\nfunction alias(object, referenceProp, aliasName) {\n  if (Object.defineProperty) {\n    Object.defineProperty(object, aliasName, {\n      get: function() {\n        return object[referenceProp];\n      }\n    });\n  }\n  else {\n    object[aliasName] = object[referenceProp];\n  }\n}\n\n\nmodule.exports = AccountSummaries;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/javascript-api-utils/lib/account-summaries/account-summaries.js\n ** module id = 2\n ** module chunks = 2\n **/"],"sourceRoot":""}